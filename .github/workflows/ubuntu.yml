name: Ubuntu

on: [pull_request]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  COMPILE_RESULT: empty
  CXX: clang++

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/actions/configuring-and-managing-workflows/configuring-a-workflow#configuring-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup Environment
      run: |
        sudo apt-get update

        sudo apt-get install -y xorg-dev libc++-10-dev cppcheck llvm-dev clang-tidy
        cmake -E make_directory ${{runner.workspace}}/build

    - name: Run CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DENABLE_CPPCHECK=0\
           -DENABLE_CLANG_TIDY=0 -DENABLE_INCLUDE_WHAT_YOU_USE=0

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: |
        cmake --build . --config $BUILD_TYPE  2> >(tee "output.txt")

    - name: Prepare warnings/errors for processing
      if: ${{ always() }}
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: |
        echo 'COMPILE_RESULT<<EOF' >> $GITHUB_ENV
        cat output.txt >> $GITHUB_ENV
        echo 'EOF' >> $GITHUB_ENV

    - name: Post PR comment for warnings/errors
      if: ${{ always() }}
      uses: JacobDomagala/CompileResultAction@master
      with:
        compile_result: ${{env.COMPILE_RESULT}}
        comment_title: UBUNTU COMPILE RESULT
